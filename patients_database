-- Show first name and last name concatented into one column to show their full name and their full province name of each patient

SELECT CONCAT(first_name, " ", last_name) AS Full Name FROM patients
INNER JOIN province_names
ON patients.province_id = province_names.province_id;

-- Show all columns for patients who have of the following patient_ids: 1, 45, 534, 879, 1000

SELECT * FROM patients
WHERE patient_id IN (1, 45, 534, 879, 1000)

-- Show patient_id and first_name from patients where first_name start and ends with 's' and at least 6 characters long

SELECT patient_id, first_name FROM patients
WHERE first_name LIKE 's____%s';

-- Show patient_id, first_name, last_name from patients who's diagnosis is 'Dementia'
Primary diagnosis is stored in the admission table

SELECT patients.patient_id, first_name, last_name FROM patients
INNER JOIN admissions
ON patients.patient_id = admissions.patient_id
WHERE diagnosis = 'Dementia';

-- SHOW the total number of male patients and the total number of female patients in the patients table.
Display the two results in the same row

SELECT SUM(gender = 'M') AS male_count,
SUM(gender = 'F') AS female_count FROM patients;

--Show first and last name, allergies from patients which have allergies to either 'Penicillin' or 'Morphine'. 
Show results ordered ascending by allergies then by first_name then by last_name.

SELECT first_name, last_name, allergies FROM patients
WHERE allergies IN ('Pencillin','Morphine')
ORDER BY allergies, first_name, last_name;

-- With an SQL code to find patients admitted multiple times for the same diagnosis

SELECT patient_id, diagnosis FROM admission
GROUP BY patient_id, diagnosis
HAVING COUNT(*) > 1;

-- Show first name, last name and role of every person that is either patient or doctor
The roles are either 'Patient' or 'Doctor'

SELECT first_name, last_name, 'Patient' AS role FROM patients
UNION ALL
SELECT first_name, last_name, 'Doctor' AS role FROM doctors;

-- Write and SQL code to show all allergies ordered by popularity. 
To remove NULL values from query

SELECT allergies, COUNT(allergies) AS total_diagnosis FROM patients
WHERE allergies IS NOT NULL
GROUP BY allergies
ORDER BY total_diagnosis DESC;

-- Write a SQL code to show the difference between the largest weight and smallest weight for patients with the last name 'Maroni'

SELECT (MAX(weight) - MIN(weight)) AS weight_delta FROM patients
WHERE last_name = 'Maroni';

-- Write a SQL code to show first_name, last_name and the total number of admissions attended for each doctor.
Every admission has been attended by a doctor

SELECT first_name, last_name, COUNT(*) AS admissions_total FROM doctors
INNER JOIN admissions
ON admission.attending_doctor_id = doctors.doctor_id
GROUP BY attending_doctor.id;

-- For each doctor, display their id, full name and the first and last admission date they attended.

SELECT doctor_id, CONCAT('first_name'," ",'last_name) AS Full_name,
min(admission_date) AS first_admission_date, MAX(admission_date) AS last_admission_date
FROM admissions
INNER JOIN doctors
ON admissions.attending_doctor_id = doctors.doctor_id
GROUP BY full_name;

-- Write a SQL code to display the total number of patients for each province. Order by descending

SELECT province_name, count(first_name) AS total_patients FROM patients
INNER JOIN province_name
ON patients.province_id = province_names.province_id
GROUP BY province_name
ORDER BY total_patients DESC;

-- Write a SQL code to display the first name, last name and number of duplicate patients based on their first name and last name.
Example: A patient with an identical name can be considered a duplicate.

SELECT first_name, last_name, COUNT(*) AS num_of_duplicates FROM patients
GROUP By first_name, last_name
HAVING COUNT(*) > 1;

-- Write SQL codes to Display patient's full name,
height in the units feet rounded to 1 decimal,
weight in the unit pounds rounded to 0 decimals,
birth_date, gender non abbreviated.
- Convert CM to feet by dividing by 30.48.
- Convert KG to pounds by multiplying by 2.205.

SELECT CONCAT(first_name, " ",last_name) AS full_name,
ROUND(height/30.48, 1) AS "Height(FT)", 
ROUND(weight/2.205,0) AS "WEIGHT(pounds)", birth_date,
CASE 
	WHEN gender = 'M' THEN 'Male'
  Else 'Female' 
END AS 'gender_type'
FROM patients;






































